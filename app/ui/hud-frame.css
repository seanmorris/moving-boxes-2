.hud {
	/*image-rendering: pixelated;*/
	opacity: 0;
}

.viewport-frame.level .hud {
	opacity: 1;
	z-index: 1000;
}

.hud-centered:empty {
	display: none;
}

.hud-centered {
	top: 50%;
	left:  50%;
	transform: scale(var(--scale)) translate(-50%, -50%) !important;
	min-width: 20em;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	transform-origin: top left;
}

.hud .centered {
	display: flex;
	justify-content: center;
}

.hud-top-left {
	display: block;
	position: absolute;
	top: 0.75em;
	left: 1.25em;
	right: 0;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	transform-origin: top left;
	width: 240px;
}

.hud-top-left.hud-table,
.hud-top-right.hud-table {
	margin-top:  4em;
}

.hud-bottom-left.hud-table,
.hud-top-left.hud-table {
	margin-left:  1em;
}

.hud-bottom-right.hud-table,
.hud-top-right.hud-table {
	margin-right:  1em;
}

.hud-top-right {
	display: block;
	position: absolute;
	top: 0.75em;
	right: 0.75em;
	display: flex;
	flex-direction: column;
	transform-origin: top right;
	justify-content: flex-start;
}

.hud-bottom-right {
	display: block;
	position: absolute;
	bottom: 15px;
	right: 2px;
	display: flex;
	flex-direction: column;
	transform-origin: bottom right;
	justify-content: flex-start;
}

.hud-bottom-left {
	display: none;
	position: absolute;
	bottom: 5px;
	left: 5px;
	height: 36px;
	overflow: hidden;
	transform-origin: bottom left;
	justify-content: flex-start;
	padding-left: 48px !important;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	/*filter: brightness(0);*/
	border-top-left-radius: 19px !important;
	border-bottom-left-radius: 18px !important;
	transform: scale(var(--scale)) translateX(-120%) !important;
	transition: transform 0.5s ease-in, filter 0.75s 0.25s ease-in;
	transition: transform 0.75s ease-in, filter 0.5s ease-in;
}

.hud-bottom-left {
	transition: transform 0.5s ease-out, filter 0.75s ease-in !important;;
	/*transform: scale(var(--scale)) translateX(0%) !important;*/
	/*transform: scale(0.5, 0.5);*/
}

.hud-bottom-left > .hud-character-string {
	flex-shrink: 0;
	flex-grow: 0;
}

.hud-bottom-left::before {
	content: ' ';
	position: absolute;
	left: -0px;
	top: 0px;
	background-image: url(/Sonic/headphones.png);
	background-color: rgba(255,255,0,0.65);
	background-repeat: no-repeat;
	background-position: center;
	border-radius: 50%;
	width: 32px;
	height: 32px;
	padding: 2px;
	margin: 2px;
}

.hud-top-left > :empty {
	display: none;
}

.hud-frame {
	width: 79px;
	height: 25px;
	position: relative;
}

.hud-frame:before {
	background-image: url(/Sonic/hud-frame.png);
	background-repeat: no-repeat;
	width: 100%;
	height: 100%;
	position: absolute;
	content: ' ';
	z-index: 1;
}

.ring-frame:before {
	background-image: url(/Sonic/ring-hud.png);
}

.coin-frame:before {
	background-image: url(/custom/coin-hud.png);
}

.emerald-frame:before {
	background-image: url(/custom/emerald-hud.png);
}

.hud-value {
	position: absolute;
	top: 5px;
	left: 5px;
	width: 69px;
	padding-left: 1px;
	padding-right: 1px;
	padding-top: 1px;
	box-sizing: border-box;
	background-color: rgba(0,0,0,0.5);
	text-align: right;
}

.ring-frame .hud-value {
	width: 50px;
	left: 24px;
}

.timer {
}


.viewport .hud {
	position: absolute;
	z-index: 0;
}

.viewport .hud-dark {
	padding: 2px;
	padding-left: 4px;
	padding-right: 4px;
	border-radius: 3px;
	background-color: rgba(0,0,0,0.5);
	pointer-events: initial;
}

.viewport .hud table {
	border-spacing: 0;
	border-collapse: collapse;
	font-family: 'early_gameboy_regular'
}

.viewport .hud tr > td {
	padding: 0;
	margin: 0;
}

.viewport .hud tr > td > * {
	vertical-align: middle;
	margin-top: -3px;
}

.viewport .hud tr > td:nth-child(2) {
	margin: 0;
	text-align: right;
}

.hud .hud-character-string {
	filter:
		drop-shadow(1px 1px 0px rgba(0, 0, 0, 0.5))
		drop-shadow(-1px -1px 0px rgba(0, 0, 0, 0.5))
		drop-shadow(-1px 1px 0px rgba(0, 0, 0, 0.5))
		drop-shadow(1px -1px 0px rgba(0, 0, 0, 0.5))
	;
}

.status-message .hud-character {
	background-color: rgb(0,0,0,0.5);
	animation: sine 1.5s ease-in-out infinite;
	animation-delay: calc(var(--time) * calc( var(--index) - var(--length) ));
}
.status-message .hud-character-string {
	transition: opacity 0.333s 0.5s ease-in;
	opacity: 1;
}

.status-message .hud-character-string.hide {
	opacity: 0;
	display: none;
}

.status-message .hud-character-string.hidden {
	display: none;
}

@keyframes sine {
	0%,100% {transform: translateY( var(--distance) );}
	25% {transform: translateY( calc(-1 * var(--distance)) );}
	50% {transform: translateY( var(--distance) );}
	75% {transform: translateY( calc(-1 * var(--distance)) );}
}
