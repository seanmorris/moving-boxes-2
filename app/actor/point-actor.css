.point-actor,
.point-actor-filter {
	position: absolute;
	left: calc(1px * var(--x));
	top: calc(1px * var(--y));

	/*--outlineWidth:    var(--outlineWidth, 0px);*/
	--outlineWidthNeg: calc(-1 * var(--outlineWidth));
	--hoverWidth:      calc(2px + var(--outlineWidthNeg));
	--outlineColor:    rgba(0,0,0,1);

	/*will-change: transform;*/
}

.point-actor .labels:not(:empty) {
	z-index: 1000000;
	min-width: 100%;
	padding: 2px;
	position: absolute;
	bottom: calc(1px * var(--height));
	transform: rotateY(0deg);
	transition: transform 0.125s ease-out;
}

.point-actor[data-facing="left"] .labels {
	transform: rotateY(180deg);
}

.point-actor[data-mode="1"] .labels {
	transform: rotateZ(-90deg);
}

.point-actor[data-mode="1"][data-facing="left"] .labels {
	transform: rotateZ(-90deg) rotateX(180deg);
}


.point-actor[data-mode="2"] .labels {
	transform: rotateX(180deg) rotateY(180deg);
}

.point-actor[data-mode="2"][data-facing="left"] .labels {
	transform: rotateX(180deg);
}


.point-actor[data-mode="3"] .labels {
	transform: rotateZ(90deg);
}

.point-actor[data-mode="3"][data-facing="left"] .labels {
	transform: rotateZ(-90deg) rotateY(180deg);
}

.actor-generic .labels > * {
	display: none;
}

.point-actor-filter {
	position: absolute;
	pointer-events: none;
	--width: 64 !important;
	--height: 64 !important;
	left: calc(calc(calc(1px * calc(var(--xOff)) + calc(1px * calc(var(--x) - 16)))) - 16px);
	top: calc(calc(calc(1px * calc(var(--yOff)) + calc(1px * calc(var(--y) - 16)))) - calc(1px * var(--height)));
	/*height: calc(0px + calc(1px * var(--height)));
	width: calc(0px + calc(1px * var(--width)));*/
	width: 64px;
	height: 64px;
	/*transform: translate(
		calc(-50% + calc(0.6667px * var(--width)))
		, calc(-50% + calc(0.6667px * var(--height)))
	);*/
	background: rgba(255,0,0,0);
	opacity: 1;
}

.pinch-filter, .twist-filter {
	transform: scale(1.5);
}

.filters-foreground > .point-actor-filter {
	backdrop-filter: blur(0px);
	filter: var(--fgFilter);
}

.filters-background > .point-actor-filter {
	backdrop-filter: blur(0px);
	filter: var(--bgFilter);
}

.actor-item .sprite {
	content: ' ';
	font-size: 0.25rem;
	color: black;
	text-align: center;
	position: absolute;
	top: 0;
	left: 0;
	height: calc(1px * var(--height));
	width: calc(1px * var(--width));
	transform-origin: center bottom;
	box-shadow: none;
	background-repeat: no-repeat;
}

.actor-selected {
	z-index: 100000;
}

.actor-item[data-active=true] {
	z-index: 20000;
}


.sprite > svg {
	position: absolute;
	top: 0px;
	left: 0px;
}



.actor-item.actor-bumper .sprite {
	background-image: url(/Sonic/score-orb.png);
	width: 32px;
	height: 32px;
}

.actor-item.actor-explosion .sprite {
	background-image: url(/Sonic/explosion.png);
	--sprite-offset-x: -8px;
	--sprite-offset-y: -64px;
	width: 48px;
	height: 48px;

	animation: explosion steps(5) infinite;
	animation-duration: calc(1ms * 480);

	z-index: 20000;
}

.actor-item.actor-ring .sprite {
	background-image: url(/Sonic/rings.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -148px;
	animation: ringSpin steps(4) infinite;
	animation-duration: calc(1ms * 350);
	transition: opacity 0.25s ease-in;
}

.actor-item.actor-ring .sprite .labels {
	display: none;
}

.actor-item.actor-emerald .sprite {
	background-image: url(/Sonic/emerald-white.png);
}

.actor-item.actor-ring.gone .sprite,
.actor-item.actor-ring.collected .sprite {
	--sprite-offset-y: -84px;
	animation: ringTwinkle steps(4) infinite;
	animation-duration: calc(1ms * 140);
}


.actor-item.actor-coin .sprite {
	background-image: url(/mario/coins.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -16px;
	animation: ringSpin steps(4) infinite;
	animation-duration: calc(1ms * 350);
	transition: opacity 0.5s ease-out, top 0.05s ease-in, filter 0.5s ease-in;
}

.actor-item.actor-coin.gone .sprite,
.actor-item.actor-coin.collected .sprite {
	animation-duration: calc(1ms * 15);
	--sprite-offset-y: -82px;
	top: -10px;
}

.actor-item.actor-coin.gone .sprite {
	animation: coinTwinkle steps(6) infinite;
	animation-duration: calc(1ms * 15);
}

.actor-item.actor-ring.gone .sprite {
	opacity: 0;
	filter: brightness(5);
}

.actor-item.actor-window .sprite {
	background-image: url(/castlevania/window.png);
}

.actor-item[data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% + 1px));
}

.actor-item:not([data-rolling="true"])[data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% - var(--hoverWidth))) rotate(calc(-1rad * var(--ground-angle)));
}

.actor-item:not([data-rolling="true"])[data-mode="1"] .sprite {
	transform: translate(calc(-50% + 2px), -100%) rotate(calc( calc(-1rad * var(--ground-angle) + 90deg)));
}

.actor-item:not([data-rolling="true"])[data-mode="2"] .sprite {
	transform: translate(-50%, calc(-100% + 2px)) rotate(calc( calc(-1rad * var(--ground-angle) + 180deg)));
}

.actor-item:not([data-rolling="true"])[data-mode="3"] .sprite {
	transform: translate(calc(-50% - 1px), calc(-100% + 2px)) rotate(calc( calc(-1rad * var(--ground-angle) + 270deg)));
}

.actor-item:not([data-rolling="true"])[data-mode="0"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% - var(--hoverWidth))) rotate(calc(-1rad * var(--ground-angle))) scale(-1,1);
}

.actor-item:not([data-rolling="true"])[data-mode="1"][data-facing="left"] .sprite {
	transform: translate(calc(-50% + 2px), -100%) rotate(calc( calc(-1rad * var(--ground-angle) + 90deg))) scale(-1,1);
}

.actor-item:not([data-rolling="true"])[data-mode="2"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 2px)) rotate(calc( calc(-1rad * var(--ground-angle) + 180deg))) scale(-1,1);
}

.actor-item:not([data-rolling="true"])[data-mode="3"][data-facing="left"] .sprite {
	transform: translate(calc(-50% - 1px), calc(-100% + 2px)) rotate(calc( calc(-1rad * var(--ground-angle) + 270deg))) scale(-1,1);
}




/*.actor-item[data-animation="rolling"][data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% + 1px));
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% + 1px));
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="1"] .sprite {
	transform: translate(-25%, calc(-100% + 1px));
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="2"] .sprite {
	transform: translate(-50%, calc(-100% + 31px));
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="3"] .sprite {
	transform: translate(calc(-75% + 2px), calc(-100% + 1px));
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="0"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="1"][data-facing="left"] .sprite {
	transform: translate(-25%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="2"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 31px)) scale(-1,1);
}

.actor-item[data-animation="rolling"][data-falling="false"][data-mode="3"][data-facing="left"] .sprite {
	transform: translate(calc(-75% + 2px), calc(-100% - 1px)) scale(-1,1);
}

*/


.actor-item[data-mode="0"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="1"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="2"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="3"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item {
	position: relative;
	display: none;
}

.actor-item:before {
	display: none;
	box-sizing: border-box;
	content: ' ';
	transform: translate(-50%, calc(-100% + 1px));
	position: absolute;
	top: 0px;
	left: 0px;
	height: calc(1px * var(--height));
	width: calc(1px * var(--width));
}

/*.actor-item[data-colliding="true"]:before {
	--collColor: rgba(0,255,255,0.15);
	z-index: 10;
}

.actor-item.collision-top:before {
	border-top: 4px solid var(--collColor);
	top: 0px
}
.actor-item.collision-left:before {
	border-left: 4px solid var(--collColor);
}
.actor-item.collision-bottom:before {
	border-bottom: 4px solid var(--collColor);
}
.actor-item.collision-right:before {
	border-right: 4px solid var(--collColor);
}*/

@-webkit-keyframes ringSpin {
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes q-block-spin {
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes ringTwinkle {
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes starPostActive {
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-32px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes coinTwinkle {
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-386px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes spin {
	from{
		transform: rotate(0deg);
	}
	to{
		transform: rotate(-360deg);
	}
}


@-webkit-keyframes spin2x {
	from{
		transform: rotate(0deg);
	}
	to{
		transform: rotate(-720deg);
	}
}

.actor-layer-switch .sprite {
	background-color: yellow;
	opacity: 0.5;
}

.actor-selected .labels {
	display: none;
}

.actor-generic .sheild {
	transform: translate(-64%, -100%);
}
.actor-generic .bubble-sheild {
	transform: translate(-42%, -100%);
}
